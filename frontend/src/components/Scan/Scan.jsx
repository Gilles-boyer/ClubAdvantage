import { useEffect, useState } from "react";
import { displayScans, createScan } from "../../services/scanService"; // API pour GET & POST /scans
import ScanCamera from "./ScanCamera"; // Cam√©ra HTML5
import ScanResult from "./ScanResult"; // Affiche les donn√©es d‚Äôun scan r√©ussi

export default function Scans() {
    // Tous les scans enregistr√©s (affich√©s dans un tableau)
    const [scans, setScans] = useState([]);

    // Dernier scan r√©ussi (affich√© sous forme d√©taill√©e)
    const [scanSuccess, setScanSuccess] = useState(null);

    // Affichage d‚Äôun toast (message temporaire de succ√®s ou erreur)
    const [toast, setToast] = useState({ show: false, message: "", type: "success" });

    // üîÅ Lors du premier rendu de la page, on r√©cup√®re la liste des scans
    useEffect(() => {
        fetchScans();
    }, []);

    // Fonction pour charger tous les scans depuis l‚ÄôAPI
    const fetchScans = async () => {
        try {
            const res = await displayScans();
            setScans(res.data.data);
        } catch (err) {
            console.error("Erreur GET scans :", err);
        }
    };

    // ‚úÖ Fonction appel√©e √† chaque scan r√©ussi
    const handleScanSuccess = async (scannedUserId, scannerId) => {
        const payload = {
            scanned_at: new Date().toISOString(), // Date/heure actuelle
            scanned_by: scannerId,                // ID du staff
            user_id: scannedUserId                // ID du membre scann√©
        };

        try {
            // Enregistrement du scan dans la BDD
            const res = await createScan(payload);

            // Mise √† jour de la liste (ajout du nouveau scan √† la fin)
            setScans((prev) => [...prev, res.data.data]);

            // Affiche les d√©tails du dernier scan
            setScanSuccess(res.data.data);

            // Affiche un message de succ√®s pendant 3 secondes
            setToast({ show: true, message: "‚úÖ Scan enregistr√© avec succ√®s", type: "success" });
            setTimeout(() => {
                setToast({ show: false, message: "", type: "success" });
            }, 3000);
        } catch (err) {
            console.error("Erreur cr√©ation scan :", err);

            // Affiche un message d'erreur si la requ√™te √©choue
            setToast({ show: true, message: "‚ùå Erreur lors du scan", type: "error" });
            setTimeout(() => {
                setToast({ show: false, message: "", type: "error" });
            }, 3000);
        }
    };

    return (
        <>
            {/* Titre principal */}
            <h1 className="text-2xl font-semibold text-center my-4">Scans enregistr√©s</h1>

            {/* Composant de scan (cam√©ra HTML5) */}
            <ScanCamera onSuccess={handleScanSuccess} />

            {/* Zone d'affichage du toast */}
            {toast.show && (
                <div
                    className={`text-center mt-4 px-4 py-2 rounded font-semibold
                    ${toast.type === "success" ? "bg-green-100 text-green-700" : "bg-red-100 text-red-700"}`}>
                    {toast.message}
                </div>
            )}

            {/* D√©tails du dernier scan r√©ussi */}
            {scanSuccess && <ScanResult data={scanSuccess} />}

            {/* Tableau des scans */}
            <section className="pt-10 max-w-4xl mx-auto">
                <table className="table w-full">
                    <thead>
                        <tr className="bg-primary text-white">
                            <th>Date</th>
                            <th>Scann√© par</th>
                            <th>Utilisateur scann√©</th>
                        </tr>
                    </thead>
                    <tbody>
                        {scans.map((scan) => (
                            <tr key={scan.id}>
                                <td>{scan.scanned_at}</td>
                                <td>{scan.scanned_by_name}</td>
                                <td>{scan.scanned_user_name}</td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            </section>
        </>
    );
}
